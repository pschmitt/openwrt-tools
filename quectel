#!/usr/bin/env bash

# See also
# https://openwrt.org/docs/guide-user/network/wan/wwan/ltedongle

usage() {
  echo "Usage: quectel CMD [ARGS]"
  echo ""
  echo "Commands:"
  echo "  at [CMD]      Execute AT command"
  echo "  curl ARGS     cURL through lte nic"
  echo "  ip            IP Status"
  echo "  status        LTE Status info (uqmi)"
  echo "  uqmi ARGS     Execute uqmi command"
  echo "  qmicli ARGS   Execute qmicli command"
  echo "  reboot        Reboot modem"
}

echo_info() {
  echo -e "\e[34m${*}\e[0m" >&2
}

uqmi() {
  # local qmi_device="qrtr://0"
  local qmi_device="/dev/cdc-wdm0"
  echo_info "\$ uqmi -d $qmi_device $*"
  command uqmi -d "$qmi_device" "$@"
}

qmicli() {
  local qmi_device="/dev/cdc-wdm0"
  echo_info "\$ qmicli -d $qmi_device $*"
  command qmicli -d "$qmi_device" "$@"
}

socat_cmd() {
  socat - /dev/ttyUSB2,crnl
}

at_command() {
  local c="$*"
  echo_info "Issuing AT command $c"
  echo -n "$c" | socat_cmd
}

usb_replug() {
  local vnd="$1"
  local pid="$2"

  if [[ -z "$vnd" || -z "$pid" ]]
  then
    echo "ERROR: Missing vendor or product ID" >&2
    return 1
  fi

  local usb_path
  local vendor_file
  local device_dir
  local vendor_value
  local product_file
  local product_value

  while IFS= read -r -d '' vendor_file
  do
    device_dir=${vendor_file%/*}

    if ! read -r vendor_value < "$vendor_file"
    then
      continue
    fi

    if [[ "$vendor_value" != "$vnd" ]]
    then
      continue
    fi

    product_file="$device_dir/idProduct"

    if [[ ! -r "$product_file" ]]
    then
      continue
    fi

    if ! read -r product_value < "$product_file"
    then
      continue
    fi

    if [[ "$product_value" == "$pid" ]]
    then
      usb_path="$device_dir"
      break
    fi
  done < <(find /sys/bus/usb/devices -type f -name idVendor -print0)
  if [[ -z "$usb_path" ]]
  then
    echo "ERROR: Could not find USB device with VID:PID $vnd:$pid" >&2
    return 1
  fi

  echo_info "Replugging USB device with VID:PID $vnd:$pid at $usb_path"
  echo 0 | tee "$usb_path"/authorized >/dev/null
  sleep 2
  echo 1 | tee "$usb_path"/authorized >/dev/null
}

if [[ "${BASH_SOURCE[0]}" == "${0}" ]]
then
  case "$1" in
    help|h|-h|--help)
      usage
      exit 0
      ;;
    status)
      qmicli --uim-get-card-status
      uqmi --get-imei
      uqmi --get-signal-info
      uqmi --get-data-status
      uqmi --get-current-settings
      /srv/bin/wm-ip lte
      ;;
    ip*)
      ip a s wwan0
      ;;
    curl)
      shift
      echo_info \$ curl --interface wwan0 "$@"
      curl --interface wwan0 "$@"
      ;;
    reset|reboot)
      at_command 'AT+QPOWD=0'
      ;;
    replug)
      usb_replug 2c7c 0306
      ;;
    at|cmd|socat)
      shift
      if [[ -z "$*" ]]
      then
        echo_info "Starting interactive socat session"
        socat_cmd
        exit "$?"
      fi

      at_command "$*"
      ;;
    qmicli)
      shift
      if [[ -z "$*" ]]
      then
        {
          echo "ERROR: Missing command"
          usage
        } >&2
        exit 2
      fi

      qmicli "$*"
      ;;
    *qmi*)
      shift
      if [[ -z "$*" ]]
      then
        {
          echo "ERROR: Missing command"
          usage
        } >&2
        exit 2
      fi

      uqmi "$*"
      ;;
    *)
      usage >&2
      exit 2
      ;;
  esac
fi
